apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat
spec:
  type: filebeat
  version: 7.13.4
  elasticsearchRef:
    name: es-appslogs
#  kibanaRef:
#    name: kibana
  config:
    filebeat.autodiscover.providers:
    - hints:
        default_config:
          enabled: "false"
#    - hints:
#        default_config:
#          paths:
#          - /var/log/containers/*${data.kubernetes.container.id}.log
#          type: container
#        enabled: true
      node: ${HOSTNAME}
      templates:
      # Replace with the application Namespace
      - condition.equals.kubernetes.namespace: application-namespace
        config:
        - paths: ["/var/log/containers/*${data.kubernetes.container.id}.log"]
          type: container
      type: kubernetes

    output.elasticsearch.index: "filebeat-%{[kubernetes.namespace]}-%{+yyyy.MM.dd}"
    processors:
    - add_cloud_metadata: {}
    - add_host_metadata:
        netinfo.enabled: false
    - add_docker_metadata: {}
    - add_kubernetes_metadata:
        host: ${HOSTNAME}
        matchers:
        - logs_path:
            logs_path: /var/log/containers/
    setup.ilm.enabled: false
    setup.template.enabled: true
    setup.template.name: "filebeat-%{[agent.version]}"
    setup.template.pattern: "filebeat-*"
    setup.template.order: 50
    setup.template.overwrite: true
    setup.template.settings:
      index.number_of_shards: 1
      index.number_of_replicas: 0
      index.lifecycle.name: "applogs-index-policy"
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            privileged: true
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
# Uncomment for Nutanix Karbon
#          - name: varlibnutanixdockercontainers
#            mountPath: /var/nutanix/docker/containers
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
# Uncomment for Nutanix Karbon
#        - name: varlibnutanixdockercontainers
#          hostPath:
#            path: /var/nutanix/docker/containers
